@startuml Bookworm Complete Class Diagram

skinparam classAttributeIconSize 0
skinparam class {
  BackgroundColor white
  ArrowColor black
  BorderColor black
}

' ----- Базовые классы -----
abstract class BaseActivity {
  # SupabaseAuth supabaseAuth
  # onCreate(Bundle savedInstanceState): void
  # getSupabaseAuth(): SupabaseAuth
  # getCurrentTheme(): String
  # applyTheme(): void
}

abstract class BaseFragment {
  # Context context
  # SupabaseAuth supabaseAuth
  + onAttach(Context context): void
  + getSupabaseAuth(): SupabaseAuth
}

' ----- Активности -----
class MainActivity {
  - BottomNavigationView navView
  - String currentTheme
  - SupabaseService supabaseService
  + onCreate(Bundle savedInstanceState): void
  + onResume(): void
  + onDestroy(): void
}

class SignInActivity {
  - EditText emailField
  - EditText passwordField
  + onCreate(Bundle savedInstanceState): void
  + onSignInClick(View view): void
  + onRegisterClick(View view): void
}

class SingUpActivity {
  - EditText emailField
  - EditText passwordField
  - EditText confirmPasswordField
  + onCreate(Bundle savedInstanceState): void
  + onSignUpClick(View view): void
}

class BooksActivity {
  - RecyclerView booksRecyclerView
  - BookAdapter bookAdapter
  - List<Book> books
  + onCreate(Bundle savedInstanceState): void
  + loadBooks(): void
}

class BookActivity {
  - Book book
  - TextView titleTextView
  - TextView authorTextView
  - ProgressBar progressBar
  + onCreate(Bundle savedInstanceState): void
  + onReadClick(View view): void
  + onEditClick(View view): void
  + updateBookInfo(): void
}

class BookReaderActivity {
  - Book currentBook
  - int currentPage
  - int totalPages
  + onCreate(Bundle savedInstanceState): void
  + onPageChange(int newPage): void
  + updateReadingProgress(): void
}

class AddBookActivity {
  - EditText titleEditText
  - EditText authorEditText
  - Button selectFileButton
  - Button selectCoverButton
  + onCreate(Bundle savedInstanceState): void
  + onSelectFileClick(View view): void
  + onSelectCoverClick(View view): void
  + onSaveBookClick(View view): void
}

class EditBookActivity {
  - Book book
  - EditText titleEditText
  - EditText authorEditText
  - RatingBar ratingBar
  - EditText reviewEditText
  + onCreate(Bundle savedInstanceState): void
  + loadBookData(): void
  + onSaveChangesClick(View view): void
}

class ShelfDetailActivity {
  - Shelf shelf
  - RecyclerView booksRecyclerView
  - BookAdapter bookAdapter
  + onCreate(Bundle savedInstanceState): void
  + loadShelfBooks(): void
  + onAddBookToShelfClick(View view): void
}

class SettingsActivity {
  - Switch darkModeSwitch
  - Spinner fontSizeSpinner
  + onCreate(Bundle savedInstanceState): void
  + onOptionSelected(View view): void
}

class PersonalDataActivity {
  - EditText nameEditText
  - EditText emailEditText
  - Button saveButton
  + onCreate(Bundle savedInstanceState): void
  + savePersonalData(): void
}

class FilePickerActivity {
  - RecyclerView filesRecyclerView
  - String currentPath
  + onCreate(Bundle savedInstanceState): void
  + navigateToFolder(String path): void
  + selectFile(String filePath): void
}

' ----- Фрагменты -----
class HomeFragment {
  - RecyclerView recentBooksRecyclerView
  - TextView welcomeTextView
  - ChartView readingStatsChart
  + onCreateView(...): View
  + onViewCreated(View view, Bundle savedInstanceState): void
  + loadRecentBooks(): void
  + loadReadingStats(): void
}

class LibraryFragment {
  - RecyclerView booksRecyclerView
  - BookAdapter bookAdapter
  - List<Book> booksList
  + onCreateView(...): View
  + onViewCreated(View view, Bundle savedInstanceState): void
  + loadLibrary(): void
  + filterBooks(String filter): void
}

class ShelvesFragment {
  - RecyclerView shelvesRecyclerView
  - List<Shelf> shelvesList
  + onCreateView(...): View
  + onViewCreated(View view, Bundle savedInstanceState): void
  + loadShelves(): void
  + onCreateShelfClick(View view): void
}

class ProfileFragment {
  - TextView usernameTextView
  - TextView booksReadTextView
  - Button settingsButton
  + onCreateView(...): View
  + onViewCreated(View view, Bundle savedInstanceState): void
  + loadUserData(): void
}

' ----- Адаптеры -----
class BookAdapter {
  - List<Book> books
  - OnBookClickListener listener
  + onCreateViewHolder(...): ViewHolder
  + onBindViewHolder(...): void
  + getItemCount(): int
}

class ChartPagerAdapter {
  - List<Chart> charts
  - FragmentManager fragmentManager
  + getItem(int position): Fragment
  + getCount(): int
  + getPageTitle(int position): CharSequence
}

' ----- Модели данных -----
class Book {
  - String id
  - String title
  - String author
  - String description
  - String coverPath
  - String filePath
  - String fileFormat
  - String status
  - int currentPage
  - int totalPages
  - int readingDays
  - String startDate
  - String endDate
  - int rating
  - String review
  - boolean exist
  + getReadingProgress(): int
}

class Quote {
  - String id
  - String bookId
  - String text
  - int page
  - String dateAdded
}

class Shelf {
  - String id
  - String name
  - String description
  - String userId
  - List<String> bookIds
}

class TocItem {
  - String title
  - int level
  - int position
  - String anchorId
}

' ----- Сервисы -----
class SupabaseAuth {
  - String accessToken
  - String refreshToken
  - String userId
  + signIn(String email, String password): Response
  + signUp(String email, String password): Response
  + signOut(): void
  + refreshSession(): boolean
  + isAuthenticated(): boolean
  + getAccessToken(): String
  + getUserId(): String
}

class SupabaseService {
  - SupabaseAuth auth
  - PostgrestClient client
  + getBooks(): List<Book>
  + getShelves(): List<Shelf>
  + addBook(Book book): Response
  + updateBook(Book book): Response
  + deleteBook(String bookId): Response
  + addShelf(Shelf shelf): Response
  + addBookToShelf(String bookId, String shelfId): Response
  + shutdown(): void
}

class FileUtils {
  + static getFileExtension(String filePath): String
  + static isImageFile(String filePath): boolean
  + static copyFile(String src, String dest): boolean
}

class BookwormApplication {
  - SupabaseAuth supabaseAuth
  - SupabaseService supabaseService
  + onCreate(): void
  + getSupabaseAuth(): SupabaseAuth
  + getSupabaseService(): SupabaseService
}

' ----- Наследование -----
BaseActivity <|-- MainActivity
BaseActivity <|-- SignInActivity
BaseActivity <|-- SingUpActivity
BaseActivity <|-- BooksActivity
BaseActivity <|-- BookActivity
BaseActivity <|-- BookReaderActivity
BaseActivity <|-- AddBookActivity
BaseActivity <|-- EditBookActivity
BaseActivity <|-- ShelfDetailActivity
BaseActivity <|-- SettingsActivity
BaseActivity <|-- PersonalDataActivity
BaseActivity <|-- FilePickerActivity

BaseFragment <|-- HomeFragment
BaseFragment <|-- LibraryFragment
BaseFragment <|-- ShelvesFragment
BaseFragment <|-- ProfileFragment

' ----- Ассоциации -----
Book "1" -- "many" Quote: содержит
Shelf "1" -- "many" Book: содержит
SupabaseService -- SupabaseAuth: использует
MainActivity --> HomeFragment: отображает
MainActivity --> LibraryFragment: отображает
MainActivity --> ShelvesFragment: отображает 
MainActivity --> ProfileFragment: отображает
BookActivity --> BookReaderActivity: открывает
BookActivity --> EditBookActivity: открывает
HomeFragment --> BookActivity: открывает
LibraryFragment --> BookActivity: открывает
ShelvesFragment --> ShelfDetailActivity: открывает
ShelfDetailActivity --> BookActivity: открывает
ProfileFragment --> SettingsActivity: открывает
ProfileFragment --> PersonalDataActivity: открывает
AddBookActivity --> FilePickerActivity: использует
SupabaseService --> Book: управляет
SupabaseService --> Shelf: управляет
BooksActivity --> BookAdapter: использует
LibraryFragment --> BookAdapter: использует
BookReaderActivity --> TocItem: использует

@enduml 